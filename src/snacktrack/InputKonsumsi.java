/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package snacktrack;

import database.ItemKonsumsiDB;
import database.databaseConnection;
import java.sql.*;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anom
 */
public class InputKonsumsi extends javax.swing.JFrame {

    /**
     * Creates new form LoginFrame
     */
    private DefaultTableModel tableModel;
    private ItemKonsumsiDB itemDB = new ItemKonsumsiDB();
    private String email;

    public InputKonsumsi(String email) {
        initComponents();
        this.email = email;
        tableModel = (DefaultTableModel) tblTabel.getModel();
        loadTable(tableModel, email);
    }

    public InputKonsumsi() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNamaItem = new javax.swing.JTextField();
        txtKalori = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        comboKategori = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtWaktu = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabel = new javax.swing.JTable();
        lblMessage = new javax.swing.JLabel();
        btnDaily = new javax.swing.JButton();
        btnLogOUt = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        btnHapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Britannic Bold", 1, 18)); // NOI18N
        jLabel1.setText("SnackTrack Daily");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Tambah Catatan Konsumsi");

        jLabel3.setText("Nama Item");

        jLabel4.setText("Kalori");

        txtNamaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaItemActionPerformed(evt);
            }
        });

        txtKalori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKaloriActionPerformed(evt);
            }
        });

        jLabel5.setText("Kategori");

        comboKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "Makanan", "Minuman" }));

        jLabel6.setText("Waktu Konsumsi");

        txtWaktu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWaktuActionPerformed(evt);
            }
        });

        btnTambah.setBackground(new java.awt.Color(0, 102, 153));
        btnTambah.setForeground(new java.awt.Color(0, 0, 0));
        btnTambah.setText("Tambah Catatan");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        tblTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Item", "Nama Item", "Kalori", "Kategori", "Waktu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTabel);

        lblMessage.setText("Keterangan");

        btnDaily.setText("DailyLog");
        btnDaily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDailyActionPerformed(evt);
            }
        });

        btnLogOUt.setText("LogOut");
        btnLogOUt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOUtActionPerformed(evt);
            }
        });

        lblId.setText("ID");

        btnHapus.setBackground(new java.awt.Color(0, 102, 153));
        btnHapus.setForeground(new java.awt.Color(0, 0, 0));
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(86, 86, 86)
                        .addComponent(btnDaily))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtNamaItem, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(txtKalori, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(comboKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(txtWaktu, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(btnTambah)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnHapus)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(lblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(43, 43, 43)))
                    .addComponent(btnLogOUt))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnDaily))
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNamaItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtKalori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtWaktu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnHapus)
                    .addComponent(lblId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMessage)
                .addGap(18, 18, 18)
                .addComponent(btnLogOUt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaItemActionPerformed

    private void txtKaloriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKaloriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKaloriActionPerformed

    private void txtWaktuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWaktuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWaktuActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        String nama = txtNamaItem.getText();
        double kalori = Double.parseDouble(txtKalori.getText());
        String kategori = comboKategori.getSelectedItem().toString();
        String waktuKonsumsi = txtWaktu.getText();

        try {
            ItemKonsumsi item = new ItemKonsumsi(nama, kalori, kategori, waktuKonsumsi, email);
            if (itemDB.tambahItem(item)) {
                JOptionPane.showMessageDialog(null, "Item berhasil ditambahkan", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                loadTable(tableModel, email);
                reset();
            } else {
                JOptionPane.showMessageDialog(null, "Item gagal ditambahkan", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ValidasiException e) {
            lblMessage.setText("Gagal menambahkan item: " + e.getMessage());
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void reset() {
        txtNamaItem.setText("");
        txtKalori.setText("");
        comboKategori.setSelectedIndex(-1);
        txtWaktu.setText("");
    }
    private void btnDailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDailyActionPerformed
        new UserDailyLog(email).setVisible(true);
    }//GEN-LAST:event_btnDailyActionPerformed

    private void btnLogOUtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOUtActionPerformed
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogOUtActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int id = Integer.parseInt(lblId.getText());
        itemDB.hapusItem(id);
        loadTable(tableModel, email);
    }//GEN-LAST:event_btnHapusActionPerformed

    private void tblTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTabelMouseClicked
        int selectedRow = tblTabel.getSelectedRow();
        if (selectedRow != -1) {
            try {
                // Get the ID from the table (assuming it's in the first column)
                Object idValue = tblTabel.getValueAt(selectedRow, 0);
                if (idValue instanceof Integer) {
                    int id = (Integer) idValue;
                    lblId.setText(String.valueOf(id));
                } else if (idValue instanceof String) {
                    lblId.setText((String) idValue);
                } else {
                    // Handle cases where the ID is of an unexpected type
                    lblId.setText("");
                    JOptionPane.showMessageDialog(null, "ID tidak valid.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                // Handle potential exceptions (e.g., ClassCastException)
                lblId.setText("");
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat mengambil ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_tblTabelMouseClicked
    public void loadTable(DefaultTableModel tableModel, String email) {
        String query = "SELECT * FROM item_konsumsi WHERE username = ?";

        try (Connection connection = databaseConnection.getConnection(); PreparedStatement statement = connection.prepareStatement(query)) {

            statement.setString(1, email);
            ResultSet resultSet = statement.executeQuery();

            tableModel.setRowCount(0); // Clear existing rows

            while (resultSet.next()) {
                int id = resultSet.getInt("id_item_konsumsi");
                String nama = resultSet.getString("nama");
                String kategori = resultSet.getString("kategori");
                double kalori = resultSet.getDouble("kalori");
                String waktuKonsumsi = resultSet.getString("waktu_konsumsi");

                tableModel.addRow(new Object[]{id, nama, kategori, kalori, waktuKonsumsi});
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputKonsumsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputKonsumsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputKonsumsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputKonsumsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputKonsumsi().setVisible(true);
            }
        });
    }

    public void loadData() {
        DefaultTableModel tableModel = (DefaultTableModel) tblTabel.getModel();
        tableModel.setRowCount(0);

        String sql = "SELECT * FROM itemkonsumsi";
        try (Connection con = databaseConnection.getConnection(); Statement stmt = con.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {
                String nama = rs.getString("nama");
                double kalori = rs.getDouble("kalori");
                String kategori = rs.getString("kategori");
                String waktuKonsumsi = rs.getString("waktuKonsumsi");

                tableModel.addRow(new Object[]{nama, kalori, kategori, waktuKonsumsi});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDaily;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnLogOUt;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox<String> comboKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JTable tblTabel;
    private javax.swing.JTextField txtKalori;
    private javax.swing.JTextField txtNamaItem;
    private javax.swing.JTextField txtWaktu;
    // End of variables declaration//GEN-END:variables
}
